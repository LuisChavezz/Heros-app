{"version":3,"sources":["auth/AuthContext.js","types/types.js","components/login/LoginScreen.js","components/ui/Navbar.js","data/heros.js","components/heros/HeroCard.js","components/heros/HeroList.js","selectors/getHerosByPublisher.js","components/marvel/MarvelScreen.js","components/heros/HeroScreen.js","selectors/getHerosById.js","components/dc/DcScreen.js","components/search/SearchScreen.js","hooks/useForm.js","selectors/getHerosBySearch.js","routers/DashboardRoutes.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","auth/authReducer.js","HerosApp.js","index.js"],"names":["AuthContext","createContext","types","LoginScreen","history","useHistory","dispatch","useContext","className","onClick","replace","type","payload","name","Navbar","user","to","activeClassName","exact","heros","HeroCard","id","superhero","alter_ego","publisher","first_appearance","characters","style","maxWidth","src","alt","HeroList","useMemo","includes","Error","filter","hero","getHerosByPublisher","map","MarvelScreen","HeroScreen","heroId","useParams","find","length","push","goBack","DcScreen","SearchScreen","location","useLocation","queryString","parse","search","q","initialState","useState","values","setValues","e","target","value","useForm","handleInputChange","herosFiltered","heroSearch","toLocaleLowerCase","onSubmit","preventDefault","placeholder","autoComplete","onChange","DashboardRoutes","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","logged","authReducer","state","action","init","JSON","localStorage","getItem","HerosApp","useReducer","useEffect","setItem","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.364dd0f6.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\n\r\nexport const AuthContext = createContext();","\r\n\r\nexport const  types = { //contiene todos los types de la app\r\n\r\n    login:  '[auth] login',\r\n    logout: '[auth] logout',\r\n\r\n}","\r\nimport { GrLogin } from 'react-icons/gr';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport { useContext } from 'react';\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { types } from '../../types/types';\r\n\r\nexport const LoginScreen = () => {\r\n    \r\n    let history = useHistory();\r\n\r\n    const { dispatch } = useContext( AuthContext );\r\n\r\n    const handleLogin = () => {\r\n        // history.push('/');\r\n        history.replace('/');\r\n\r\n        dispatch( {\r\n            type: types.login,\r\n            payload: {\r\n                name: 'Luigiberto',\r\n            }\r\n        } );\r\n    }\r\n    \r\n    \r\n    return (\r\n        <div>\r\n            <h1>LoginScreen</h1>\r\n            <hr />\r\n\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                onClick={ handleLogin }\r\n            >\r\n                Login <GrLogin />\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport { useContext } from 'react';\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { types } from '../../types/types';\r\n\r\nexport const Navbar = () => {\r\n    \r\n    let history = useHistory();\r\n\r\n    const { user, dispatch } = useContext( AuthContext );\r\n\r\n    const handleLogout = () => {\r\n\r\n        history.replace('/login');\r\n\r\n        dispatch( {\r\n            type: types.logout,\r\n        } );\r\n    }\r\n        \r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            \r\n            <Link \r\n                className=\"navbar-brand\" \r\n                to=\"/\"\r\n            >\r\n                Asociaciones\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/marvel\"\r\n                    >\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/dc\"\r\n                    >\r\n                        DC\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/search\"\r\n                    >\r\n                        SearchHero\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n\r\n                    <span className=\"nav-item nav-link text-info\">\r\n                        {user.name}\r\n                    </span>\r\n\r\n                    <button \r\n                        className=\"nav-item nav-link btn\"\r\n                        onClick={ handleLogout }\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","export const heros = [\r\n    {\r\n        'id': 'dc-batman',\r\n        'superhero':'Batman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Bruce Wayne',\r\n        'first_appearance':'Detective Comics #27',\r\n        'characters':'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero':'Superman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Kal-El',\r\n        'first_appearance':'Action Comics #1',\r\n        'characters':'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero':'Flash', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Jay Garrick',\r\n        'first_appearance':'Flash Comics #1',\r\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero':'Green Lantern', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Alan Scott',\r\n        'first_appearance':'All-American Comics #16',\r\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero':'Green Arrow', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Oliver Queen',\r\n        'first_appearance':'More Fun Comics #73',\r\n        'characters':'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero':'Wonder Woman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Princess Diana',\r\n        'first_appearance':'All Star Comics #8',\r\n        'characters':'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero':'Martian Manhunter', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'J\\'onn J\\'onzz',\r\n        'first_appearance':'Detective Comics #225',\r\n        'characters':'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero':'Robin/Nightwing', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dick Grayson',\r\n        'first_appearance':'Detective Comics #38',\r\n        'characters':'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero':'Blue Beetle', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dan Garret',\r\n        'first_appearance':'Mystery Men Comics #1',\r\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero':'Black Canary', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dinah Drake',\r\n        'first_appearance':'Flash Comics #86',\r\n        'characters':'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero':'Spider Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Peter Parker',\r\n        'first_appearance':'Amazing Fantasy #15',\r\n        'characters':'Peter Parker'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero':'Captain America', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Steve Rogers',\r\n        'first_appearance':'Captain America Comics #1',\r\n        'characters':'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero':'Iron Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Tony Stark',\r\n        'first_appearance':'Tales of Suspense #39',\r\n        'characters':'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero':'Thor', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Thor Odinson',\r\n        'first_appearance':'Journey into Myster #83',\r\n        'characters':'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero':'Hulk', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Bruce Banner',\r\n        'first_appearance':'The Incredible Hulk #1',\r\n        'characters':'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero':'Wolverine', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'James Howlett',\r\n        'first_appearance':'The Incredible Hulk #180',\r\n        'characters':'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero':'Daredevil', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Matthew Michael Murdock',\r\n        'first_appearance':'Daredevil #1',\r\n        'characters':'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero':'Hawkeye', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Clinton Francis Barton',\r\n        'first_appearance':'Tales of Suspense #57',\r\n        'characters':'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero':'Cyclops', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Scott Summers',\r\n        'first_appearance':'X-Men #1',\r\n        'characters':'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero':'Silver Surfer', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Norrin Radd',\r\n        'first_appearance':'The Fantastic Four #48',\r\n        'characters':'Norrin Radd'\r\n    }\r\n]","\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const HeroCard = ({ \r\n    //props//\r\n\r\n    id,\r\n    superhero,\r\n    publisher,\r\n    alter_ego,\r\n    first_appearance,\r\n    characters,\r\n\r\n }) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"card ms-3\" style={ { maxWidth: 540 } }>\r\n            <div className=\"row no-gutters\">\r\n                <div className=\"col-md-4\">\r\n                    <img \r\n                        src={`./assets/heroes/${ id }.jpg`} \r\n                        className=\"card-img\"\r\n                        alt={ id } \r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{ superhero }</h5>\r\n                        <p className=\"card-text\">{ alter_ego }</p>\r\n\r\n                        {\r\n                            ( alter_ego !== characters )\r\n                            &&\r\n                                <p className=\"card-text\">{ characters }</p>\r\n                        }\r\n\r\n                        <p className=\"card-text\">\r\n                            <small className=\"text-muted\">{ first_appearance }</small>\r\n                        </p>\r\n\r\n                        <Link to={`./hero/${ id }`}>\r\n                            Más...\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useMemo } from \"react\";\r\nimport { getHerosByPublisher } from \"../../selectors/getHerosByPublisher\"\r\nimport { HeroCard } from \"./HeroCard\";\r\n\r\n\r\n\r\nexport const HeroList = ({ publisher }) => {\r\n    \r\n    //useMemo => recordar los elementos y no tener que realizar la función de nuevo si no es necesario.\r\n    const heros = useMemo( () => getHerosByPublisher( publisher ), [publisher]);\r\n    // const heros = getHerosByPublisher( publisher );\r\n    \r\n    \r\n    return (\r\n        <div className=\"card-columns\" >\r\n            {\r\n                heros.map( hero => (\r\n                    <HeroCard \r\n                        key={ hero.id }\r\n                        {...hero /*envia en prop, las propiedades del objeto por separado*/ }\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { heros } from \"../data/heros\";\r\n\r\n\r\nexport const getHerosByPublisher = ( publisher ) => {\r\n\r\n    const validPublishers = ['DC Comics', 'Marvel Comics'];\r\n\r\n    if ( !validPublishers.includes( publisher ) ) {\r\n        throw new Error(`Publisher \"${ publisher }\" no es correcto.`);\r\n    }\r\n\r\n    return heros.filter( hero => hero.publisher === publisher );\r\n}","import { HeroList } from \"../heros/HeroList\"\r\n\r\n\r\n\r\nexport const MarvelScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>Marvel Screen</h1>\r\n            <hr />\r\n\r\n            <HeroList publisher={'Marvel Comics'} />\r\n        </div>\r\n    )\r\n}\r\n","import { Redirect, useParams } from \"react-router\"\r\nimport { getHerosById } from \"../../selectors/getHerosById\";\r\n\r\n\r\nexport const HeroScreen = ({ history }) => {\r\n    \r\n    const { heroId } = useParams();\r\n    \r\n    const hero = getHerosById( heroId );\r\n\r\n    if ( !hero ) {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    const handleReturn = () => {\r\n\r\n        if ( history.length <= 2 ) {\r\n            history.push('/');\r\n            \r\n        } else{\r\n            history.goBack();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <div className=\"col-4\">\r\n                <img \r\n                    src={ `../assets/heroes/${ heroId }.jpg` }\r\n                    alt={ hero.superhero } \r\n                    className=\"img-thumbnail\"    \r\n                />\r\n            </div>\r\n\r\n            <div className=\"col-8\">\r\n                <h3>{ hero.superhero }</h3>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\">\r\n                        <b>Alter ego: </b>{ hero.alter_ego }\r\n                    </li>\r\n\r\n                    <li className=\"list-group-item\">\r\n                        <b>Publisher: </b>{ hero.publisher }\r\n                    </li>\r\n\r\n                    <li className=\"list-group-item\">\r\n                        <b>First appearance: </b>{ hero.first_appearance }\r\n                    </li>\r\n                </ul>\r\n\r\n                <h5>Character</h5>\r\n                <p>{ hero.characters }</p>\r\n\r\n                <button \r\n                    className=\"btn btn-outline-info\"\r\n                    onClick={ handleReturn }\r\n                >\r\n                    Return\r\n                </button>\r\n            </div>\r\n                    \r\n            \r\n        </div>\r\n    )\r\n}\r\n","import { heros } from \"../data/heros\";\r\n\r\n\r\nexport const getHerosById = ( id ) => {\r\n\r\n    return heros.find( hero => hero.id === id );\r\n}","import { HeroList } from \"../heros/HeroList\"\r\n\r\n\r\n\r\nexport const DcScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>DC Screen</h1>\r\n            <hr />\r\n\r\n            <HeroList publisher={'DC Comics'} />\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { HeroCard } from '../heros/HeroCard';\r\nimport { getHerosBySearch } from '../../selectors/getHerosBySearch';\r\nimport { useLocation } from 'react-router';\r\nimport queryString from 'query-string';\r\nimport { useMemo } from 'react';\r\n\r\n\r\nimport { AiOutlineSearch } from 'react-icons/ai';\r\n\r\n\r\n\r\nexport const SearchScreen = ({ history }) => {\r\n    \r\n    const location = useLocation();\r\n    const { q = '' } = ( queryString.parse( location.search ) );\r\n\r\n    const [ {hero}, handleInputChange ] = useForm({\r\n        hero: q,\r\n    });\r\n\r\n    // const herosFiltered = getHerosBySearch( hero );\r\n    const herosFiltered = useMemo( () => getHerosBySearch( hero ), [q]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        history.push(`?q=${ hero }`);\r\n    }\r\n    \r\n    \r\n    return (\r\n        <div>\r\n            <h1>Search Screen</h1>\r\n            <hr />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    <h4>Search Form</h4>\r\n                    <hr />\r\n\r\n                    <form onSubmit={ handleSubmit }>\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"hero\"\r\n                            placeholder=\"Find your hero...\"\r\n                            className=\"form-control\"\r\n                            autoComplete=\"off\"\r\n                            value={ hero }\r\n                            onChange={ handleInputChange }\r\n                        \r\n                        />\r\n\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn mt-1 btn-block btn-outline-primary\"\r\n                        >\r\n                            <AiOutlineSearch />\r\n                        </button>\r\n                    </form>\r\n\r\n                </div>\r\n\r\n                <div className=\"col-6\">\r\n                    <h4>Results</h4>\r\n                    <hr />\r\n\r\n                    {\r\n                        (q === '')\r\n                        &&\r\n                            <div className=\"alert alert-info\">\r\n                                Please, search a hero!\r\n                            </div>\r\n                    }\r\n\r\n                    {\r\n                        (q !== '' && herosFiltered.length < 1 )\r\n                        &&\r\n                            <div className=\"alert alert-danger\">\r\n                                There is no a hero \"{q}\"\r\n                            </div>\r\n                    }\r\n\r\n                    {\r\n                        herosFiltered.map( hero => (\r\n                            <HeroCard \r\n                                key={ hero.id }\r\n                                {...hero /*envia en prop, las propiedades del objeto por separado*/ }\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","/*\r\n    Hook encargado de guardar en un objeto, el valor seteado en cada\r\n    input del formulario cada vez que haya un cambio en dicho input.\r\n    Ejemplo:\r\n    {\r\n        name_del_input: valor_del_input,\r\n        name_del_input: valor_del_input,\r\n        name_del_input: valor_del_input,\r\n        ...\r\n    }\r\n    va agregando siempre un atributo con el 'name' del input y le asigna\r\n    el valor que tenga el mismo input.\r\n*/\r\n\r\nimport { useState } from \"react\"\r\n\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [ values, setValues ] = useState( initialState );\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n    const handleInputChange = (e) => { \r\n\r\n        setValues( {\r\n            ...values,\r\n            [ e.target.name ]: e.target.value\r\n        } );\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n}","import { heros } from \"../data/heros\";\r\n\r\nexport const getHerosBySearch = ( heroSearch ) => {\r\n    \r\n    if ( heroSearch === '' ) {\r\n        return [];\r\n    }\r\n\r\n    heroSearch = heroSearch.toLocaleLowerCase();\r\n\r\n    return heros.filter( hero => hero.superhero.toLocaleLowerCase().includes( heroSearch ));\r\n}","import { Navbar } from \"../components/ui/Navbar\"\r\n\r\nimport {\r\n    // BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport { MarvelScreen } from \"../components/marvel/MarvelScreen\";\r\nimport { HeroScreen } from \"../components/heros/HeroScreen\";\r\nimport { DcScreen } from \"../components/dc/DcScreen\";\r\nimport { SearchScreen } from \"../components/search/SearchScreen\";\r\n\r\n\r\nexport const DashboardRoutes = () => {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n\r\n            <div className=\"container mt-3\">\r\n                <Switch>\r\n                    <Route exact path=\"/marvel\" component={ MarvelScreen } />\r\n                    <Route exact path=\"/hero/:heroId\" component={ HeroScreen } />\r\n                    <Route exact path=\"/dc\" component={ DcScreen } />\r\n                    <Route exact path=\"/search\" component={ SearchScreen } />\r\n\r\n                    <Redirect to=\"/marvel\" />\r\n                </Switch>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const PrivateRoute = ({ //props\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            component={ (props) => (\r\n                ( isAuthenticated ) //si es true o false\r\n                    ?   <Component {...props} /> \r\n                    :   <Redirect to=\"/login\" />\r\n            ) }\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const PublicRoute = ({ //props\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            component={ (props) => (\r\n                ( !isAuthenticated ) //si es true o false\r\n                    ?   <Component {...props} /> \r\n                    :   <Redirect to=\"/\" />\r\n            ) }\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}","\r\nimport { useContext } from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    // Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\nimport { LoginScreen } from \"../components/login/LoginScreen\";\r\nimport { DashboardRoutes } from \"./DashboardRoutes\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\n\r\nexport const AppRouter = () => {\r\n    \r\n    const {user} = useContext(AuthContext)\r\n    \r\n    return (\r\n        <Router>\r\n            <div>\r\n                {/* <Navbar /> */}\r\n\r\n                <Switch>\r\n                    {/* <Route exact path=\"/login\" component={ LoginScreen } /> */}\r\n\r\n                    <PublicRoute \r\n                        exact\r\n                        path=\"/login\" \r\n                        component={ LoginScreen } \r\n                        isAuthenticated={ user.logged }\r\n                    />\r\n\r\n                    <PrivateRoute \r\n                        path=\"/\" \r\n                        component={ DashboardRoutes } \r\n                        isAuthenticated={ user.logged }\r\n                    />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\n\r\nexport const authReducer = ( state = {}, action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            \r\n            return {\r\n                ...action.payload,\r\n                logged: true,\r\n            }\r\n\r\n        case types.logout:\r\n            \r\n            return {\r\n                logged: false,\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { useEffect, useReducer } from \"react\"\r\nimport { AuthContext } from \"./auth/AuthContext\"\r\nimport { AppRouter } from \"./routers/AppRouter\"\r\nimport { authReducer } from \"./auth/authReducer\"\r\n\r\n\r\nconst init = () => { //lectura del LS || seteado por defecto\r\n    return JSON.parse(localStorage.getItem('user')) || { logged: false }\r\n}\r\n\r\nexport const HerosApp = () => {\r\n\r\n    const [user, dispatch] = useReducer( authReducer, {}, init);\r\n\r\n    useEffect( () => { //guardar en login del usuario en el LS\r\n        localStorage.setItem('user', JSON.stringify( user ));\r\n\r\n    }, [user] );\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, dispatch }}>\r\n            <AppRouter />\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HerosApp } from './HerosApp';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <HerosApp />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}